2020-01-14 16:10:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "DATABASECHANGELOGLOCK" not found; SQL statement:
SELECT COUNT(*) FROM PUBLIC.DATABASECHANGELOGLOCK [42102-200]
2020-01-14 16:10:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Value too long for column "COUNTRY CHAR(2)": "'RUS' (3)"; SQL statement:
INSERT INTO PUBLIC.island(id, name, country) VALUES(?, ?, ?) [22001-200]
2020-01-14 16:10:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Value too long for column "COUNTRY CHAR(2)": "'NZL' (3)"; SQL statement:
INSERT INTO PUBLIC.island(id, name, country) VALUES(?, ?, ?) [22001-200]
2020-01-14 16:10:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Value too long for column "COUNTRY CHAR(2)": "'AUS' (3)"; SQL statement:
INSERT INTO PUBLIC.island(id, name, country) VALUES(?, ?, ?) [22001-200]
2020-01-14 16:10:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Value too long for column "COUNTRY CHAR(2)": "'AUS' (3)"; SQL statement:
INSERT INTO PUBLIC.island(id, name, country) VALUES(?, ?, ?) [22001-200]
2020-01-14 16:10:40 jdbc[3]: exception
org.h2.jdbc.JdbcBatchUpdateException: Value too long for column "COUNTRY CHAR(2)": "'RUS' (3)"; SQL statement:
INSERT INTO PUBLIC.island(id, name, country) VALUES(?, ?, ?) [22001-200]
	at org.h2.jdbc.JdbcPreparedStatement.executeBatch(JdbcPreparedStatement.java:1235)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeBatch(NewProxyPreparedStatement.java:2544)
	at liquibase.statement.BatchDmlExecutablePreparedStatement.executePreparedStatement(BatchDmlExecutablePreparedStatement.java:65)
	at liquibase.statement.ExecutablePreparedStatementBase.execute(ExecutablePreparedStatementBase.java:85)
	at liquibase.executor.jvm.JdbcExecutor.execute(JdbcExecutor.java:117)
	at liquibase.database.AbstractJdbcDatabase.execute(AbstractJdbcDatabase.java:1276)
	at liquibase.database.AbstractJdbcDatabase.executeStatements(AbstractJdbcDatabase.java:1258)
	at liquibase.changelog.ChangeSet.execute(ChangeSet.java:609)
	at liquibase.changelog.visitor.UpdateVisitor.visit(UpdateVisitor.java:53)
	at liquibase.changelog.ChangeLogIterator.run(ChangeLogIterator.java:83)
	at liquibase.Liquibase.update(Liquibase.java:202)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.Liquibase.update(Liquibase.java:175)
	at liquibase.Liquibase.update(Liquibase.java:168)
	at us.vanderlugt.sample.vertx.model.RepositoryVerticle.runLiquibaseMigration(RepositoryVerticle.java:70)
	at us.vanderlugt.sample.vertx.model.RepositoryVerticle.lambda$start$1(RepositoryVerticle.java:44)
	at io.vertx.ext.jdbc.impl.JDBCClientImpl.lambda$null$8(JDBCClientImpl.java:295)
	at io.vertx.core.impl.ContextImpl.executeTask(ContextImpl.java:369)
	at io.vertx.core.impl.EventLoopContext.lambda$executeAsync$0(EventLoopContext.java:38)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:510)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:518)
	at io.netty.util.concurrent.SingleThreadEventExecutor$6.run(SingleThreadEventExecutor.java:1044)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
org.h2.jdbc.JdbcSQLDataException: Value too long for column "COUNTRY CHAR(2)": "'RUS' (3)"; SQL statement:
INSERT INTO PUBLIC.island(id, name, country) VALUES(?, ?, ?) [22001-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.value.TypeInfo.getValueTooLongException(TypeInfo.java:535)
	at org.h2.value.TypeInfo.cast(TypeInfo.java:520)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:378)
	at org.h2.table.Table.validateConvertUpdateSequence(Table.java:845)
	at org.h2.command.dml.Insert.insertRows(Insert.java:187)
	at org.h2.command.dml.Insert.update(Insert.java:151)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:191)
	at org.h2.jdbc.JdbcPreparedStatement.executeBatch(JdbcPreparedStatement.java:1219)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeBatch(NewProxyPreparedStatement.java:2544)
	at liquibase.statement.BatchDmlExecutablePreparedStatement.executePreparedStatement(BatchDmlExecutablePreparedStatement.java:65)
	at liquibase.statement.ExecutablePreparedStatementBase.execute(ExecutablePreparedStatementBase.java:85)
	at liquibase.executor.jvm.JdbcExecutor.execute(JdbcExecutor.java:117)
	at liquibase.database.AbstractJdbcDatabase.execute(AbstractJdbcDatabase.java:1276)
	at liquibase.database.AbstractJdbcDatabase.executeStatements(AbstractJdbcDatabase.java:1258)
	at liquibase.changelog.ChangeSet.execute(ChangeSet.java:609)
	at liquibase.changelog.visitor.UpdateVisitor.visit(UpdateVisitor.java:53)
	at liquibase.changelog.ChangeLogIterator.run(ChangeLogIterator.java:83)
	at liquibase.Liquibase.update(Liquibase.java:202)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.Liquibase.update(Liquibase.java:175)
	at liquibase.Liquibase.update(Liquibase.java:168)
	at us.vanderlugt.sample.vertx.model.RepositoryVerticle.runLiquibaseMigration(RepositoryVerticle.java:70)
	at us.vanderlugt.sample.vertx.model.RepositoryVerticle.lambda$start$1(RepositoryVerticle.java:44)
	at io.vertx.ext.jdbc.impl.JDBCClientImpl.lambda$null$8(JDBCClientImpl.java:295)
	at io.vertx.core.impl.ContextImpl.executeTask(ContextImpl.java:369)
	at io.vertx.core.impl.EventLoopContext.lambda$executeAsync$0(EventLoopContext.java:38)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:510)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:518)
	at io.netty.util.concurrent.SingleThreadEventExecutor$6.run(SingleThreadEventExecutor.java:1044)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
org.h2.jdbc.JdbcSQLDataException: Value too long for column "COUNTRY CHAR(2)": "'NZL' (3)"; SQL statement:
INSERT INTO PUBLIC.island(id, name, country) VALUES(?, ?, ?) [22001-200]
org.h2.jdbc.JdbcSQLDataException: Value too long for column "COUNTRY CHAR(2)": "'AUS' (3)"; SQL statement:
INSERT INTO PUBLIC.island(id, name, country) VALUES(?, ?, ?) [22001-200]
org.h2.jdbc.JdbcSQLDataException: Value too long for column "COUNTRY CHAR(2)": "'AUS' (3)"; SQL statement:
INSERT INTO PUBLIC.island(id, name, country) VALUES(?, ?, ?) [22001-200]
2020-01-14 16:10:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Value too long for column "COUNTRY CHAR(2)": "'RUS' (3)"; SQL statement:
INSERT INTO PUBLIC.island(id, name, country) VALUES(?, ?, ?) [22001-200]
2020-01-14 16:10:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Value too long for column "COUNTRY CHAR(2)": "'NZL' (3)"; SQL statement:
INSERT INTO PUBLIC.island(id, name, country) VALUES(?, ?, ?) [22001-200]
2020-01-14 16:10:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Value too long for column "COUNTRY CHAR(2)": "'AUS' (3)"; SQL statement:
INSERT INTO PUBLIC.island(id, name, country) VALUES(?, ?, ?) [22001-200]
2020-01-14 16:10:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Value too long for column "COUNTRY CHAR(2)": "'AUS' (3)"; SQL statement:
INSERT INTO PUBLIC.island(id, name, country) VALUES(?, ?, ?) [22001-200]
2020-01-14 16:10:41 jdbc[3]: exception
org.h2.jdbc.JdbcBatchUpdateException: Value too long for column "COUNTRY CHAR(2)": "'RUS' (3)"; SQL statement:
INSERT INTO PUBLIC.island(id, name, country) VALUES(?, ?, ?) [22001-200]
	at org.h2.jdbc.JdbcPreparedStatement.executeBatch(JdbcPreparedStatement.java:1235)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeBatch(NewProxyPreparedStatement.java:2544)
	at liquibase.statement.BatchDmlExecutablePreparedStatement.executePreparedStatement(BatchDmlExecutablePreparedStatement.java:65)
	at liquibase.statement.ExecutablePreparedStatementBase.execute(ExecutablePreparedStatementBase.java:85)
	at liquibase.executor.jvm.JdbcExecutor.execute(JdbcExecutor.java:117)
	at liquibase.database.AbstractJdbcDatabase.execute(AbstractJdbcDatabase.java:1276)
	at liquibase.database.AbstractJdbcDatabase.executeStatements(AbstractJdbcDatabase.java:1258)
	at liquibase.changelog.ChangeSet.execute(ChangeSet.java:609)
	at liquibase.changelog.visitor.UpdateVisitor.visit(UpdateVisitor.java:53)
	at liquibase.changelog.ChangeLogIterator.run(ChangeLogIterator.java:83)
	at liquibase.Liquibase.update(Liquibase.java:202)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.Liquibase.update(Liquibase.java:175)
	at liquibase.Liquibase.update(Liquibase.java:168)
	at us.vanderlugt.sample.vertx.model.RepositoryVerticle.runLiquibaseMigration(RepositoryVerticle.java:70)
	at us.vanderlugt.sample.vertx.model.RepositoryVerticle.lambda$start$1(RepositoryVerticle.java:44)
	at io.vertx.ext.jdbc.impl.JDBCClientImpl.lambda$null$8(JDBCClientImpl.java:295)
	at io.vertx.core.impl.ContextImpl.executeTask(ContextImpl.java:369)
	at io.vertx.core.impl.EventLoopContext.lambda$executeAsync$0(EventLoopContext.java:38)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:510)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:518)
	at io.netty.util.concurrent.SingleThreadEventExecutor$6.run(SingleThreadEventExecutor.java:1044)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
org.h2.jdbc.JdbcSQLDataException: Value too long for column "COUNTRY CHAR(2)": "'RUS' (3)"; SQL statement:
INSERT INTO PUBLIC.island(id, name, country) VALUES(?, ?, ?) [22001-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.value.TypeInfo.getValueTooLongException(TypeInfo.java:535)
	at org.h2.value.TypeInfo.cast(TypeInfo.java:520)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:378)
	at org.h2.table.Table.validateConvertUpdateSequence(Table.java:845)
	at org.h2.command.dml.Insert.insertRows(Insert.java:187)
	at org.h2.command.dml.Insert.update(Insert.java:151)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:191)
	at org.h2.jdbc.JdbcPreparedStatement.executeBatch(JdbcPreparedStatement.java:1219)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeBatch(NewProxyPreparedStatement.java:2544)
	at liquibase.statement.BatchDmlExecutablePreparedStatement.executePreparedStatement(BatchDmlExecutablePreparedStatement.java:65)
	at liquibase.statement.ExecutablePreparedStatementBase.execute(ExecutablePreparedStatementBase.java:85)
	at liquibase.executor.jvm.JdbcExecutor.execute(JdbcExecutor.java:117)
	at liquibase.database.AbstractJdbcDatabase.execute(AbstractJdbcDatabase.java:1276)
	at liquibase.database.AbstractJdbcDatabase.executeStatements(AbstractJdbcDatabase.java:1258)
	at liquibase.changelog.ChangeSet.execute(ChangeSet.java:609)
	at liquibase.changelog.visitor.UpdateVisitor.visit(UpdateVisitor.java:53)
	at liquibase.changelog.ChangeLogIterator.run(ChangeLogIterator.java:83)
	at liquibase.Liquibase.update(Liquibase.java:202)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.Liquibase.update(Liquibase.java:175)
	at liquibase.Liquibase.update(Liquibase.java:168)
	at us.vanderlugt.sample.vertx.model.RepositoryVerticle.runLiquibaseMigration(RepositoryVerticle.java:70)
	at us.vanderlugt.sample.vertx.model.RepositoryVerticle.lambda$start$1(RepositoryVerticle.java:44)
	at io.vertx.ext.jdbc.impl.JDBCClientImpl.lambda$null$8(JDBCClientImpl.java:295)
	at io.vertx.core.impl.ContextImpl.executeTask(ContextImpl.java:369)
	at io.vertx.core.impl.EventLoopContext.lambda$executeAsync$0(EventLoopContext.java:38)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:510)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:518)
	at io.netty.util.concurrent.SingleThreadEventExecutor$6.run(SingleThreadEventExecutor.java:1044)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
org.h2.jdbc.JdbcSQLDataException: Value too long for column "COUNTRY CHAR(2)": "'NZL' (3)"; SQL statement:
INSERT INTO PUBLIC.island(id, name, country) VALUES(?, ?, ?) [22001-200]
org.h2.jdbc.JdbcSQLDataException: Value too long for column "COUNTRY CHAR(2)": "'AUS' (3)"; SQL statement:
INSERT INTO PUBLIC.island(id, name, country) VALUES(?, ?, ?) [22001-200]
org.h2.jdbc.JdbcSQLDataException: Value too long for column "COUNTRY CHAR(2)": "'AUS' (3)"; SQL statement:
INSERT INTO PUBLIC.island(id, name, country) VALUES(?, ?, ?) [22001-200]
